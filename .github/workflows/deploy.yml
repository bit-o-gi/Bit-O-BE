# 워크플로의 이름 지정
name: Java Build and Deploy

# 워크플로가 시작될 조건 지정
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest # 실행 환경 지정
    # 실행 스텝 지정
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive # 모든 레벨의 서브모듈을 초기화
          token: ${{ secrets.GIT_TOKEN }}

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bito:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bito:${{ github.sha }}
            docker stop bito || true
            docker rm bito || true
            docker run -d --name bito -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/bito:${{ github.sha }}
            echo "Deployment completed successfully."
